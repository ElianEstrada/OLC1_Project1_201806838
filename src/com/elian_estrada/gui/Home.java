/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.elian_estrada.gui;

import com.elian_estrada.controllers.Menu;
import com.elian_estrada.analyzers.*;
import com.elian_estrada.classes.Expression;
import com.elian_estrada.classes.SymbolTable;
import com.elian_estrada.classes.Validation;
import java.awt.Color;
import java.awt.Image;
import java.awt.LayoutManager;
import java.awt.Point;
import java.awt.event.ItemEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import javax.swing.BorderFactory;
import javax.swing.ComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeModel;

/**
 *
 * @author elian_estrada
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    private boolean flagConsole;
    private String nameFile;
    private Menu menu;
    private Parser parser;

    public Home() {
        initComponents();
        this.txtSource.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void removeUpdate(DocumentEvent e) {
                Home.this.txtSourceChanged(e);
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                Home.this.txtSourceChanged(e);
            }

            @Override
            public void changedUpdate(DocumentEvent arg0) {
                Home.this.txtSourceChanged(arg0);
            }
        });

        Border line = BorderFactory.createLineBorder(Color.WHITE);
        Border title = BorderFactory.createTitledBorder(line, "Images");
        this.txtConsole.setBorder(BorderFactory.createTitledBorder(line, "Console"));

        this.jScrollPane1.getVerticalScrollBar().setOpaque(true);
        this.jScrollPane1.getVerticalScrollBar().setBackground(new Color(32, 32, 32));
        this.jScrollPane1.getVerticalScrollBar().setBorder(null);
        this.jScrollPane1.getVerticalScrollBar().setFocusable(false);
        this.jScrollPane1.getVerticalScrollBar().removeAll();
        this.jScrollPane2.setVisible(false);
        this.setSize(this.getSize().width, this.getSize().height - this.jScrollPane2.getSize().height);
        this.getContentPane().add(this.pnInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 690, this.getSize().width, 26));
        this.flagConsole = false;
        this.nameFile = "";
        this.lblTitle.setText("Untitle.olc");
        this.menu = new Menu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblExit = new javax.swing.JLabel();
        pnMenu = new javax.swing.JPanel();
        lblOpenFile = new javax.swing.JLabel();
        lblNewFile = new javax.swing.JLabel();
        lblSaveFile = new javax.swing.JLabel();
        lblSaveFileAs = new javax.swing.JLabel();
        lblExecute = new javax.swing.JLabel();
        lblPdf = new javax.swing.JLabel();
        lblBugs = new javax.swing.JLabel();
        pnTextArea = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtSource = new javax.swing.JTextArea();
        lblTitle = new javax.swing.JLabel();
        cbImages = new javax.swing.JComboBox<>();
        lblImage = new javax.swing.JLabel();
        pnInfo = new javax.swing.JPanel();
        lblOutput = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtConsole = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(32, 32, 32));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(32, 32, 32));
        jPanel1.setAutoscrolls(true);
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblExit.setBackground(new java.awt.Color(32, 32, 32));
        lblExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/elian_estrada/images/icons8_Multiply_32px.png"))); // NOI18N
        lblExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblExit.setOpaque(true);
        lblExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblExitMouseExited(evt);
            }
        });
        jPanel1.add(lblExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 0, 30, 30));

        pnMenu.setBackground(new java.awt.Color(62, 63, 64));
        pnMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblOpenFile.setBackground(new java.awt.Color(62, 63, 64));
        lblOpenFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/elian_estrada/images/icons8-archivo-de-código-40.png"))); // NOI18N
        lblOpenFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblOpenFile.setOpaque(true);
        lblOpenFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOpenFileMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblOpenFileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblOpenFileMouseExited(evt);
            }
        });
        pnMenu.add(lblOpenFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 40, 50));

        lblNewFile.setBackground(new java.awt.Color(62, 63, 64));
        lblNewFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/elian_estrada/images/icons8-más-26.png"))); // NOI18N
        lblNewFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblNewFile.setOpaque(true);
        lblNewFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblNewFileMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblNewFileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblNewFileMouseExited(evt);
            }
        });
        pnMenu.add(lblNewFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 10, -1, 30));

        lblSaveFile.setBackground(new java.awt.Color(62, 63, 64));
        lblSaveFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/elian_estrada/images/icons8-guardar-40.png"))); // NOI18N
        lblSaveFile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSaveFile.setOpaque(true);
        lblSaveFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSaveFileMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblSaveFileMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSaveFileMouseExited(evt);
            }
        });
        pnMenu.add(lblSaveFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 40, 50));

        lblSaveFileAs.setBackground(new java.awt.Color(62, 63, 64));
        lblSaveFileAs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/elian_estrada/images/icons8-guardar-como-40.png"))); // NOI18N
        lblSaveFileAs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblSaveFileAs.setOpaque(true);
        lblSaveFileAs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSaveFileAsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblSaveFileAsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblSaveFileAsMouseExited(evt);
            }
        });
        pnMenu.add(lblSaveFileAs, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 40, 50));

        lblExecute.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/elian_estrada/images/icons8-play-40.png"))); // NOI18N
        lblExecute.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblExecute.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExecuteMouseClicked(evt);
            }
        });
        pnMenu.add(lblExecute, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        lblPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/elian_estrada/images/icons8-pdf-40.png"))); // NOI18N
        lblPdf.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblPdf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPdfMouseClicked(evt);
            }
        });
        pnMenu.add(lblPdf, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, -1));

        lblBugs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/elian_estrada/images/icons8-insecto-40.png"))); // NOI18N
        lblBugs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblBugs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBugsMouseClicked(evt);
            }
        });
        pnMenu.add(lblBugs, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, -1));

        jPanel1.add(pnMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 690));

        pnTextArea.setBackground(new java.awt.Color(32, 32, 32));
        pnTextArea.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(102, 102, 102)));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setHorizontalScrollBar(null);
        jScrollPane1.setRowHeaderView(null);

        txtSource.setBackground(new java.awt.Color(32, 32, 32));
        txtSource.setColumns(20);
        txtSource.setFont(new java.awt.Font("UKIJ Teng", 0, 14)); // NOI18N
        txtSource.setForeground(new java.awt.Color(255, 255, 255));
        txtSource.setLineWrap(true);
        txtSource.setRows(5);
        txtSource.setTabSize(4);
        txtSource.setWrapStyleWord(true);
        txtSource.setBorder(null);
        txtSource.setCaretColor(new java.awt.Color(255, 255, 255));
        txtSource.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtSourceInputMethodTextChanged(evt);
            }
        });
        jScrollPane1.setViewportView(txtSource);

        pnTextArea.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 49, 450, 640));

        lblTitle.setBackground(new java.awt.Color(58, 59, 60));
        lblTitle.setFont(new java.awt.Font("UKIJ Teng", 1, 15)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(190, 190, 190));
        lblTitle.setOpaque(true);
        pnTextArea.add(lblTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 28, -1, -1));

        jPanel1.add(pnTextArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, 450, 690));

        cbImages.setBackground(new java.awt.Color(32, 32, 32));
        cbImages.setForeground(new java.awt.Color(255, 255, 255));
        cbImages.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbImagesItemStateChanged(evt);
            }
        });
        jPanel1.add(cbImages, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, 410, 30));
        jPanel1.add(lblImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(535, 90, 630, 580));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1190, -1));

        pnInfo.setBackground(new java.awt.Color(0, 122, 204));
        pnInfo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblOutput.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        lblOutput.setForeground(new java.awt.Color(255, 255, 255));
        lblOutput.setText("Output");
        lblOutput.setToolTipText("");
        lblOutput.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblOutput.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblOutputMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblOutputMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblOutputMouseExited(evt);
            }
        });
        pnInfo.add(lblOutput, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, -1, -1));
        lblOutput.getAccessibleContext().setAccessibleName("lblOutput");

        getContentPane().add(pnInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 972, 1190, 25));

        jScrollPane2.setBorder(null);

        txtConsole.setEditable(false);
        txtConsole.setBackground(new java.awt.Color(32, 32, 32));
        txtConsole.setColumns(20);
        txtConsole.setForeground(new java.awt.Color(255, 255, 255));
        txtConsole.setLineWrap(true);
        txtConsole.setRows(5);
        txtConsole.setWrapStyleWord(true);
        txtConsole.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Console", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        txtConsole.setCaretColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(txtConsole);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 690, 1190, 281));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseClicked
        this.menu.newFile(this.txtSource.getText());
        System.exit(0);
    }//GEN-LAST:event_lblExitMouseClicked

    private void lblExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseEntered
        this.lblExit.setBackground(new Color(60, 63, 65));
    }//GEN-LAST:event_lblExitMouseEntered

    private void lblExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseExited
        this.lblExit.setBackground(new Color(32, 32, 32));
    }//GEN-LAST:event_lblExitMouseExited

    private void lblOpenFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOpenFileMouseEntered
        this.lblOpenFile.setBackground(new Color(66, 67, 68));
    }//GEN-LAST:event_lblOpenFileMouseEntered

    private void lblOpenFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOpenFileMouseExited
        this.lblOpenFile.setBackground(new Color(62, 63, 64));
    }//GEN-LAST:event_lblOpenFileMouseExited

    private void lblNewFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNewFileMouseEntered
        this.lblNewFile.setBackground(new Color(66, 67, 68));
    }//GEN-LAST:event_lblNewFileMouseEntered

    private void lblNewFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNewFileMouseExited
        this.lblNewFile.setBackground(new Color(62, 63, 64));
    }//GEN-LAST:event_lblNewFileMouseExited

    private void lblSaveFileMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSaveFileMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSaveFileMouseEntered

    private void lblSaveFileMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSaveFileMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSaveFileMouseExited

    private void lblSaveFileAsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSaveFileAsMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSaveFileAsMouseEntered

    private void lblSaveFileAsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSaveFileAsMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_lblSaveFileAsMouseExited

    private void lblOutputMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOutputMouseEntered
        this.lblOutput.setOpaque(true);
        this.lblOutput.setBackground(new Color(60, 130, 210));
    }//GEN-LAST:event_lblOutputMouseEntered

    private void lblOutputMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOutputMouseExited
        this.lblOutput.setBackground(new Color(0, 122, 204));
        this.lblOutput.setOpaque(false);
    }//GEN-LAST:event_lblOutputMouseExited

    private void lblOutputMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOutputMouseClicked
        if (!this.flagConsole) {
            this.setSize(this.getSize().width, this.getSize().height + this.jScrollPane2.getSize().height);
            this.getContentPane().add(this.pnInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 972, this.getSize().width, 26));
            this.setLocation(this.getLocation().x, this.getLocation().y - 150);
            this.jScrollPane2.setVisible(true);
            this.flagConsole = true;
        } else {
            this.setSize(this.getSize().width, this.getSize().height - this.jScrollPane2.getSize().height);
            this.getContentPane().add(this.pnInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 690, this.getSize().width, 26));
            this.setLocation(this.getLocation().x, this.getLocation().y + 150);
            this.jScrollPane2.setVisible(false);
            this.flagConsole = false;
        }
    }//GEN-LAST:event_lblOutputMouseClicked

    private void lblSaveFileAsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSaveFileAsMouseClicked
        this.nameFile = this.menu.saveAsFile(this.txtSource.getText());

        if (nameFile != "") {
            this.lblTitle.setText(nameFile);
        }
    }//GEN-LAST:event_lblSaveFileAsMouseClicked

    private void txtSourceChanged(javax.swing.event.DocumentEvent evt) {
        if (menu.getFlagEdit() && menu.getFilePath() != "") {
            this.lblTitle.setText("*" + this.nameFile);
        } else if (menu.getFilePath() != "") {
            this.lblTitle.setText("*" + this.nameFile);
            menu.setFlagEdit(true);
        } else {
            menu.setFlagEdit(true);
        }
    }

    private void txtSourceInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtSourceInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSourceInputMethodTextChanged

    private void lblSaveFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSaveFileMouseClicked
        String name = this.menu.saveFile(this.txtSource.getText());
        if (this.nameFile == "" && name != "") {
            this.nameFile = name;
            this.lblTitle.setText(nameFile);
        } else if (this.nameFile != "") {
            this.lblTitle.setText(this.nameFile);
        }

    }//GEN-LAST:event_lblSaveFileMouseClicked

    private void lblNewFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblNewFileMouseClicked
        this.menu.newFile(txtSource.getText());
        this.lblTitle.setText("Untitle.olc");
        this.txtSource.setText("");
        this.menu.setFlagEdit(false);
        this.nameFile = "";
    }//GEN-LAST:event_lblNewFileMouseClicked

    private void lblOpenFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblOpenFileMouseClicked
        String content = null;

        try {
            content = this.menu.openFile(this.txtSource.getText()).toString();
        } catch (Exception e) {
            content = null;
        }

        if (content != null) {
            this.txtSource.setText(content);
            this.nameFile = this.menu.getFilePath().split("/")[this.menu.getFilePath().split("/").length - 1];
            this.lblTitle.setText(this.nameFile);
            this.menu.setFlagEdit(false);
        }
    }//GEN-LAST:event_lblOpenFileMouseClicked

    private void lblExecuteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExecuteMouseClicked
        try {

            this.lblSaveFileMouseClicked(evt);
            this.menu.setFlagEdit(false);

            BufferedReader buffer = new BufferedReader(new FileReader(this.menu.getFilePath()));

            Scanner scanner = new Scanner(buffer);
            parser = new Parser(scanner);

            parser.parse();

            String errorReport = "<!DOCTYPE html>\n<html>\n<head>\n<title>\n Bug Report \n</title>\n"
                    + "<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n"
                    + "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\n"
                    + "</head>\n<body class=\"container grey darken-4 white-text\">\n<h1> <center> Bugs </center> </h1>\n"
                    + "<ul class = \"collapsible\">\n<li class = \"active\">\n<div class = \"collapsible-header "
                    + "grey darken-2\"> Lexical Errors </div>\n"
                    + scanner.drawing(scanner.lexicalError) + "</li>\n"
                    + "<li>\n<div class = \"collapsible-header grey darken-2\"> Sintactic Errors </div>\n"
                    + parser.drawing(parser.sintacticError) + "</li>\n</ul>\n<script>\nM.AutoInit();\n</script>\n</body>\n</html>";

            System.out.println(errorReport);

            int erLexical = scanner.lexicalError.size();
            int erSintactic = parser.sintacticError.size();

            if (erLexical != 0 || erSintactic != 0) {
                JOptionPane.showMessageDialog(null, "Lexical Errors: [" + erLexical + "];\n"
                        + "Sintactic Errors: [" + erSintactic + "]");
            } else if (erSintactic == 0) {
                Hashtable<String, SymbolTable> symbolTable = new Hashtable<String, SymbolTable>();
                ArrayList<Validation> validations = new ArrayList<Validation>();

                symbolTable = parser.symbolTableGlobal;
                validations = parser.validations;

                Enumeration enumeration = symbolTable.elements();
                SymbolTable symbol;
                Expression expression;
                DefaultMutableTreeNode root = new DefaultMutableTreeNode("Images");
                ArrayList<String> pathImages = new ArrayList<String>();
                //TreeModel tree = this.trImages.getModel();
                while (enumeration.hasMoreElements()) {
                    symbol = (SymbolTable) enumeration.nextElement();
                    expression = symbol.getExpresion();
                    if (expression != null) {
                        try {
                            Runtime.getRuntime().exec("dot" + " -Tpng " + expression.getPathTree() + ".dot -o " + expression.getPathTree() + ".png ").waitFor();
                            Runtime.getRuntime().exec("dot" + " -Tpdf " + expression.getPathTree() + ".dot -o " + expression.getPathTree() + ".pdf ").waitFor();
                            Runtime.getRuntime().exec("dot" + " -Tpng " + expression.getPathFollow() + ".dot -o " + expression.getPathFollow() + ".png ").waitFor();
                            Runtime.getRuntime().exec("dot" + " -Tpdf " + expression.getPathFollow() + ".dot -o " + expression.getPathFollow() + ".pdf ").waitFor();
                            Runtime.getRuntime().exec("dot" + " -Tpng " + expression.getPathTransitions() + ".dot -o " + expression.getPathTransitions() + ".png ").waitFor();
                            Runtime.getRuntime().exec("dot" + " -Tpdf " + expression.getPathTransitions() + ".dot -o " + expression.getPathTransitions() + ".pdf ").waitFor();
                            Runtime.getRuntime().exec("dot" + " -Tpng " + expression.getPathAFD() + ".dot -o " + expression.getPathAFD() + ".png ").waitFor();
                            Runtime.getRuntime().exec("dot" + " -Tpdf " + expression.getPathAFD() + ".dot -o " + expression.getPathAFD() + ".pdf ").waitFor();
                            /*Runtime.getRuntime().exec("dot" + " -Tpng " + expression.getPathAFN() + ".dot -o AFND_201806838/" + expression.getPathAFN() + ".png " ).waitFor();
                            Runtime.getRuntime().exec("dot" + " -Tpdf " + expression.getPathAFN() + ".dot -o AFND_201806838/" + expression.getPathAFN() + ".pdf " ).waitFor();*/

                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, "Error, Generated Report Failed");
                        }

                        pathImages.add(expression.getPathAFD());
                        pathImages.add(expression.getPathFollow());
                        pathImages.add(expression.getPathTransitions());
                        pathImages.add(expression.getPathTree());

                    }
                }

                for (String items : pathImages) {
                    this.cbImages.addItem(items);
                }
                String consoleShow = "";
                String jsonShow = "[\n";
                int count = 1;
                for (Validation item : validations) {
                    consoleShow += item.toString() + "\n";
                    if (item.isResult()) {
                        jsonShow += "\t{\n\t\t\"Valor\":\"" + item.getValue() + "\",\n";
                        jsonShow += "\t\t\"Expresión Regular\":\"" + item.getRegular() + "\",\n";
                        jsonShow += "\t\t\"Resultado\":\"" + (item.isResult() ? "Cadena Valida\"" : "Cadena Invalida\"") + "\n";
                        if ((validations.size() - count) == 0) {
                            jsonShow += "\t}\n";
                        } else {
                            jsonShow += "\t},\n";
                        }
                    }
                    count++;
                }

                jsonShow += "]";

                File dir = new File(new File(".").getCanonicalPath() + "/Outs_201806838");
                dir.mkdir();
                String[] name;
                if (this.nameFile.contains(".")) {
                    name = this.nameFile.split(".olc");
                } else {
                    name = new String[]{this.nameFile};
                }
                File file = new File(dir.getAbsolutePath() + "/" + name[0] + ".json");
                file.createNewFile();

                FileWriter write = new FileWriter(file);
                write.write(jsonShow);
                write.close();

                this.txtConsole.setText(consoleShow);

                if (!this.flagConsole) {
                    this.setSize(this.getSize().width, this.getSize().height + this.jScrollPane2.getSize().height);
                    this.getContentPane().add(this.pnInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 972, this.getSize().width, 26));
                    this.setLocation(this.getLocation().x, this.getLocation().y - 150);
                    this.jScrollPane2.setVisible(true);
                    this.flagConsole = true;
                }
            }

            JOptionPane.showMessageDialog(null, "Analysis Completed");

            File dir = new File(new File(".").getCanonicalPath() + "/Errores_20180683");
            dir.mkdir();
            File file = new File(dir.getAbsolutePath() + "/Errors.html");
            file.createNewFile();

            FileWriter write = new FileWriter(file);
            write.write(errorReport);
            write.close();

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Que pex :'v" + ex);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Que pex :'v" + e);
        }


    }//GEN-LAST:event_lblExecuteMouseClicked

    private void cbImagesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbImagesItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            //JOptionPane.showMessageDialog(null, evt.getItem().toString());
            ImageIcon icon = new ImageIcon(evt.getItem().toString() + ".png");
            Icon icono = new ImageIcon(icon.getImage().getScaledInstance(this.lblImage.getWidth(), this.lblImage.getHeight(), Image.SCALE_AREA_AVERAGING));
            this.lblImage.setIcon(icono);
        }
    }//GEN-LAST:event_cbImagesItemStateChanged

    private void lblPdfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPdfMouseClicked
        try {
            Runtime.getRuntime().exec("evince " + new File(".").getCanonicalPath() + "/" + this.cbImages.getSelectedItem().toString() + ".pdf");
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_lblPdfMouseClicked

    private void lblBugsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBugsMouseClicked
        try {
            Runtime.getRuntime().exec("google-chrome " + "Errores_201806838/Errors.html");
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_lblBugsMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbImages;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBugs;
    private javax.swing.JLabel lblExecute;
    private javax.swing.JLabel lblExit;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblNewFile;
    private javax.swing.JLabel lblOpenFile;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JLabel lblPdf;
    private javax.swing.JLabel lblSaveFile;
    private javax.swing.JLabel lblSaveFileAs;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnInfo;
    private javax.swing.JPanel pnMenu;
    private javax.swing.JPanel pnTextArea;
    private javax.swing.JTextArea txtConsole;
    private javax.swing.JTextArea txtSource;
    // End of variables declaration//GEN-END:variables
}
